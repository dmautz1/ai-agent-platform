[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = -v --tb=short 
asyncio_default_fixture_loop_scope = function 

# Coverage configuration for ApiResponse implementation
[tool:coverage:run]
source = .
omit = 
    */tests/*
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*
    manage.py
    setup.py

[tool:coverage:report]
# Fail under threshold
fail_under = 75
# Show missing lines
show_missing = true
# Skip covered files
skip_covered = false
# Sort by coverage percentage
sort = Cover
# Precision for coverage percentage
precision = 2

# Exclude lines from coverage
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[tool:coverage:html]
directory = htmlcov
title = AI Agent Platform Backend Coverage Report

[tool:coverage:xml]
output = coverage.xml

# High-priority files for ApiResponse coverage
[tool:coverage:paths]
source = 
    .
    */ai-agent-platform/backend 