# AI Agent Platform - Backend Environment Configuration
# Copy this file to .env and update with your actual values
# Never commit the .env file to version control!

# =============================================================================
# ENVIRONMENT SETTINGS
# =============================================================================

# Application environment (development|staging|production|testing)
ENVIRONMENT=development

# Enable debug mode (true|false) - should be false in production
DEBUG=true

# Application metadata
APP_NAME=AI Agent Platform API
APP_VERSION=1.0.0

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Server host and port
HOST=0.0.0.0
PORT=8000

# Auto-reload on code changes (development only)
RELOAD=true

# =============================================================================
# DATABASE CONFIGURATION (SUPABASE)
# =============================================================================

# Supabase project URL (required)
# Format: https://your-project-id.supabase.co
SUPABASE_URL=https://your-project.supabase.co

# Supabase anon key (required) - safe for client-side use
SUPABASE_KEY=your-supabase-anon-key

# Supabase service role key (required) - keep secret, server-side only
SUPABASE_SERVICE_KEY=your-supabase-service-role-key

# =============================================================================
# AUTHENTICATION & SECURITY
# =============================================================================

# JWT secret key for additional security (required)
# Generate with: openssl rand -base64 32
JWT_SECRET=your-32-character-random-jwt-secret-key

# JWT algorithm (HS256|RS256) - HS256 recommended for most cases
JWT_ALGORITHM=HS256

# Access token expiration time in minutes
ACCESS_TOKEN_EXPIRE_MINUTES=30

# API rate limiting (requests per time period)
API_RATE_LIMIT=100/minute

# Trusted hosts (comma-separated) - set for production security
TRUSTED_HOSTS=localhost,127.0.0.1

# Use secure cookies (true for HTTPS, false for HTTP)
SECURE_COOKIES=false

# Maximum request size in bytes (16MB default)
MAX_REQUEST_SIZE=16777216

# =============================================================================
# AI & AGENT CONFIGURATION
# =============================================================================

# Default LLM provider to use when none is specified
# Valid options: google|openai|anthropic|grok|deepseek|llama
DEFAULT_LLM_PROVIDER=google

# Google AI API key (required for Google AI functionality)
# Get from: https://aistudio.google.com/app/apikey
GOOGLE_API_KEY=your-google-ai-api-key

# Default Google AI model to use
GOOGLE_DEFAULT_MODEL=gemini-2.0-flash

# Use Google Vertex AI instead of AI Studio (true|false)
GOOGLE_GENAI_USE_VERTEXAI=false

# Google Cloud Project ID (only needed if using Vertex AI)
# GOOGLE_CLOUD_PROJECT=your-google-cloud-project-id

# Google Cloud Service Account Key Path (only needed if using Vertex AI)
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account-key.json

# OpenAI API key (required for OpenAI functionality)
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your-openai-api-key

# Default OpenAI model to use
OPENAI_DEFAULT_MODEL=gpt-4o-mini

# OpenAI organization ID (optional - for organization-specific usage)
# OPENAI_ORGANIZATION=org-xxxxxxxxxxxxxxxxxx

# OpenAI project ID (optional - for project-specific usage)
# OPENAI_PROJECT=proj_xxxxxxxxxxxxxxxxxx

# Grok (xAI) API key (required for Grok functionality)
# Get from: https://console.x.ai/
GROK_API_KEY=your-grok-api-key

# Default Grok model to use
GROK_DEFAULT_MODEL=grok-beta

# Grok API base URL (default: https://api.x.ai/v1)
# GROK_BASE_URL=https://api.x.ai/v1

# Grok organization ID (optional - for organization-specific usage)
# GROK_ORGANIZATION=your-grok-organization-id

# Anthropic API key (required for Anthropic/Claude functionality)
# Get from: https://console.anthropic.com/
ANTHROPIC_API_KEY=your-anthropic-api-key

# Default Anthropic model to use
ANTHROPIC_DEFAULT_MODEL=claude-3-5-sonnet-20241022

# DeepSeek API key (required for DeepSeek functionality)
# Get from: https://platform.deepseek.com/
DEEPSEEK_API_KEY=your-deepseek-api-key

# Default DeepSeek model to use
DEEPSEEK_DEFAULT_MODEL=deepseek-chat

# DeepSeek API base URL (default: https://api.deepseek.com)
# DEEPSEEK_BASE_URL=https://api.deepseek.com

# Meta Llama API key (required for Meta Llama functionality)
# Get from: https://api.together.xyz/ (or your preferred Llama API provider)
LLAMA_API_KEY=your-llama-api-key

# Default Meta Llama model to use
LLAMA_DEFAULT_MODEL=meta-llama/Llama-3-8b-chat-hf

# Meta Llama API base URL (default: https://api.together.xyz/v1 for Together AI)
# LLAMA_BASE_URL=https://api.together.xyz/v1

# Meta Llama API provider (default: together)
# LLAMA_API_PROVIDER=together

# Default agent timeout in seconds
DEFAULT_AGENT_TIMEOUT=300

# =============================================================================
# JOB PROCESSING CONFIGURATION
# =============================================================================

# Maximum number of concurrent jobs
MAX_CONCURRENT_JOBS=10

# Job timeout in seconds (1 hour default)
JOB_TIMEOUT=3600

# Number of retry attempts for failed jobs
JOB_RETRY_ATTEMPTS=3

# Maximum job queue size
JOB_QUEUE_MAX_SIZE=1000

# Clean up completed jobs after this many seconds (24 hours default, 0 = never)
CLEANUP_COMPLETED_JOBS_AFTER=86400

# =============================================================================
# CORS CONFIGURATION
# =============================================================================

# Allowed origins (comma-separated URLs or * for all)
# For development: include localhost ports
# For production: only include your domains
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000

# Allow credentials in CORS requests
CORS_ALLOW_CREDENTIALS=true

# CORS max age in seconds (24 hours default)
CORS_MAX_AGE=86400

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Logging level (DEBUG|INFO|WARNING|ERROR|CRITICAL)
LOG_LEVEL=INFO

# Log format string
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s

# Log file path (optional, logs to console if not set)
# LOG_FILE=logs/app.log

# Enable log file rotation
LOG_ROTATION=true

# Maximum log file size before rotation
LOG_MAX_SIZE=10MB

# Number of backup log files to keep
LOG_BACKUP_COUNT=5

# =============================================================================
# PERFORMANCE & SCALING
# =============================================================================

# Number of worker processes (for production deployment)
WORKER_PROCESSES=1

# Enable result caching for agents (true|false)
ENABLE_RESULT_CACHING=false

# Cache timeout in seconds (if caching enabled)
CACHE_TIMEOUT=3600

# =============================================================================
# DEPLOYMENT CONFIGURATION
# =============================================================================

# GitHub repository for deployment (optional)
GITHUB_REPO=your-username/ai-agent-platform

# Domain name for production deployment (optional)
# DOMAIN=yourdomain.com

# =============================================================================
# OPTIONAL THIRD-PARTY INTEGRATIONS
# =============================================================================

# Webhook URL for notifications (optional)
# WEBHOOK_URL=https://your-webhook-endpoint.com

# Sentry DSN for error tracking (optional)
# SENTRY_DSN=https://your-sentry-dsn

# =============================================================================
# DEVELOPMENT & TESTING
# =============================================================================

# Database connection pool size (optional optimization)
# DB_POOL_SIZE=10

# Enable SQL query logging in development
# SQL_ECHO=false

# Enable performance profiling
# ENABLE_PROFILING=false

# Test database URL (for integration tests)
# TEST_SUPABASE_URL=https://your-test-project.supabase.co
# TEST_SUPABASE_KEY=your-test-anon-key

# =============================================================================
# EXAMPLE VALUES FOR QUICK SETUP
# =============================================================================

# Uncomment and modify these for quick local development:
# SUPABASE_URL=https://xyzabc123.supabase.co
# SUPABASE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
# SUPABASE_SERVICE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
# GOOGLE_API_KEY=AIzaSyBxxxxxxxxxxxxxxxxxxxxxxxxx
# OPENAI_API_KEY=sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# JWT_SECRET=09df8a908f8a09f8a09f8a09f8a09f8a09f8a09f8a

# =============================================================================
# NOTES
# =============================================================================

# 1. Required variables MUST be set for the application to work
# 2. Optional variables have sensible defaults but can be customized
# 3. Security variables (JWT_SECRET, API keys) should be randomly generated
# 4. Use different values for development, staging, and production
# 5. Never commit this file with real values to version control
# 6. For production, consider using a secret management service
#
# For help setting up these variables, see: ENVIRONMENT_SETUP_GUIDE.md 